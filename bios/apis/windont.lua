local a={}local b=table.insert;local c=table.concat;local d=math.floor;local e={}local f={}local g=function(h,i)if type(h)~="table"or type(i)~="table"then return h==i else for j,k in pairs(h)do if h[j]~=i[j]then return false end end;for j,k in pairs(i)do if h[j]~=i[j]then return false end end;return true end end;local l=function()return 24*os.day()+os.time()end;for m=1,16 do e[2^(m-1)]=("0123456789abcdef"):sub(m,m)f[("0123456789abcdef"):sub(m,m)]=2^(m-1)end;e[0],f["-"]="-",0;local n={[1]={0.94117647409439,0.94117647409439,0.94117647409439},[2]={0.94901961088181,0.69803923368454,0.20000000298023},[4]={0.89803922176361,0.49803921580315,0.84705883264542},[8]={0.60000002384186,0.69803923368454,0.94901961088181},[16]={0.87058824300766,0.87058824300766,0.42352941632271},[32]={0.49803921580315,0.80000001192093,0.098039217293262},[64]={0.94901961088181,0.69803923368454,0.80000001192093},[128]={0.29803922772408,0.29803922772408,0.29803922772408},[256]={0.60000002384186,0.60000002384186,0.60000002384186},[512]={0.29803922772408,0.60000002384186,0.69803923368454},[1024]={0.69803923368454,0.40000000596046,0.89803922176361},[2048]={0.20000000298023,0.40000000596046,0.80000001192093},[4096]={0.49803921580315,0.40000000596046,0.29803922772408},[8192]={0.34117648005486,0.65098041296005,0.30588236451149},[16384]={0.80000001192093,0.29803922772408,0.29803922772408},[32768]={0.066666670143604,0.066666670143604,0.066666670143604}}local o={["\9"]=true,["\10"]=true,["\13"]=true,["\32"]=true,["\128"]=true}local p=function(q,r,s,t)if q[t or 1][s]then if t then return q[t][s][r]and q[t][s][r]~="-"else if(not q[2][s][r]or q[2][s][r]=="-")and(not q[3][s][r]or q[3][s][r]=="-")then return false elseif(not q[3][s][r]or q[3][s][r]=="-")and(not q[1][s][r]or o[q[1][s][r]])then return false else return q[1][s][r]and q[2][s][r]and q[3][s][r]end end end end;local u=function(v,w,x)if v==nil or x and type(v)~=x then return w else return v end end;local y={doClearScreen=false,ignoreUnchangedLines=true,useSetVisible=false,sameCharWillStencil=false,default={baseTerm=term.current(),textColor="0",backColor="f",blink=true,visible=true,alwaysRender=true},info={BLIT_CALLS=0,LAST_RENDER_TIME=0,LAST_RENDER_AMOUNT=0,LAST_RENDER_WINDOWS={}}}y.render=function(z,...)local A={...}z=z or{}local bT,B,C;if type(z.meta)=="table"then if type(z.meta.buffer)=="table"and type(z.meta.x)=="number"and type(z.meta.y)=="number"and type(z.meta.newBuffer)=="function"then b(A,1,z)end end;local D={{},{},{}}local E={}local F=1;local G=l()local H=0;local I,J;local K,L,M;local N,O,P;local q;local Q,R,S;local T,U,V;local W,X,Y;local Z={}if type(z.baseTerm)=="table"then for m=1,#A do Z[z.baseTerm]=Z[z.baseTerm]or{}Z[z.baseTerm][m]=true end else for m=1,#A do Z[A[m].meta.baseTerm]=Z[A[m].meta.baseTerm]or{}Z[A[m].meta.baseTerm][m]=true end end;for bT,_ in pairs(Z)do if bT==output then bT=z.baseTerm or output.meta.baseTerm end;if y.useSetVisible and bT.setVisible then bT.setVisible(false)end;B,C=bT.getSize()for m=#A,1,-1 do if _[m]then if A[m].meta.metaTransformation then A[m].meta.metaTransformation(A[m].meta)end end end;for s=z.onlyY or 1,z.onlyY or C do D[1][s]={}D[2][s]={}D[3][s]={}E={}F=1;for r=z.onlyX1 or 1,math.min(B,z.onlyX2 or B)do for m=#A,1,-1 do if _[m]then Q,R,S=nil;if A[m].meta.visible then q=A[m].meta.buffer;I=1+r+-A[m].meta.x;J=1+s+-A[m].meta.y;K,L,M=I,I,I;N,O,P=J,J,J;T=(q[1][J]or{})[I]U=(q[2][J]or{})[I]V=(q[3][J]or{})[I]if A[m].meta.transformation then W,X,Y=A[m].meta.transformation(I,J,T,U,V,A[m].meta)if W then K=d(W[1]or I)N=d(W[2]or J)if W[1]%1~=0 or W[2]%1~=0 then Q=" "else Q=W[3]end end;if X then L=d(X[1]or I)O=d(X[2]or J)R=X[3]end;if Y then M=d(Y[1]or I)P=d(Y[2]or J)S=Y[3]end end;if p(q,K,N)or p(q,L,O)or p(q,M,P)then D[2][s][r]=R or p(q,L,O,2)and q[2][O][L]or(q[1][O][L]==D[1][s][r]and y.sameCharWillStencil and D[2][s][r]or D[3][s][r])D[1][s][r]=Q or p(q,K,N)and q[1][N][K]or D[1][s][r]D[3][s][r]=S or p(q,M,P,3)and q[3][P][M]or D[3][s][r]end end end end;if y.doClearScreen then D[1][s][r]=D[1][s][r]or" "end;D[2][s][r]=D[2][s][r]or y.default.backColor;D[3][s][r]=D[3][s][r]or y.default.backColor;if p(D,r,s)then if p(D,-1+r,s)then E[F][1]=E[F][1]..D[1][s][r]E[F][2]=E[F][2]..D[2][s][r]E[F][3]=E[F][3]..D[3][s][r]else F=r;E[F]={D[1][s][r],D[2][s][r],D[3][s][r]}end end end;if not a[bT]or not y.ignoreUnchangedLines or z.force or(not g(D[1][s],a[bT][1][s])or not g(D[2][s],a[bT][2][s])or not g(D[3][s],a[bT][3][s]))then for j,k in pairs(E)do bT.setCursorPos(j,s)bT.blit(k[1],k[2],k[3])H=1+H end end end;a[bT]=D;if y.useSetVisible and bT.setVisible then if not multishell then bT.setVisible(true)elseif multishell.getFocus()==multishell.getCurrent()then bT.setVisible(true)end end end;y.info.LAST_RENDER_AMOUNT=#A;y.info.BLIT_CALLS=H;y.info.LAST_RENDER_WINDOWS=A;y.info.LAST_RENDER_TIME=G;y.info.LAST_RENDER_DURATION=l()+-G end;y.newWindow=function(r,s,a0,a1,a2)assert(type(r)=="number","argument #1 must be number, got "..type(r))assert(type(s)=="number","argument #2 must be number, got "..type(s))assert(type(a0)=="number","argument #3 must be number, got "..type(a0))assert(type(a1)=="number","argument #4 must be number, got "..type(a1))assert(r>0,"x position must be above zero")assert(s>0,"y position must be above zero")assert(a0>0,"width must be above zero")assert(a1>0,"height must be above zero")local output={}a2=a2 or{}local a3={x=u(r,1),y=u(s,1),width=a0,height=a1,buffer=u(a2.buffer,{},"table"),renderBuddies=u(a2.renderBuddies,{},"table"),baseTerm=u(a2.baseTerm,y.default.baseTerm,"table"),isColor=u(a2.isColor,term.isColor(),"boolean"),transformation=u(a2.transformation,nil,"function"),metaTransformation=u(a2.metaTransformation,nil,"function"),cursorX=u(a2.cursorX,1),cursorY=u(a2.cursorY,1),textColor=u(a2.textColor,y.default.textColor,"string"),backColor=u(a2.backColor,y.default.backColor,"string"),blink=u(a2.blink,y.default.blink,"boolean"),alwaysRender=u(a2.alwaysRender,y.default.alwaysRender,"boolean"),visible=u(a2.visible,y.default.visible,"boolean"),newBuffer=function(a0,a1,a4,a5,a6,a7)local output={{},{},{}}a7=a7 or{{},{},{}}for s=1,a1 do output[1][s]=output[1][s]or{}output[2][s]=output[2][s]or{}output[3][s]=output[3][s]or{}for r=1,a0 do output[1][s][r]=(a7[1][s]or{})[r]or(output[1][s][r]or(a4 or" "))output[2][s][r]=(a7[2][s]or{})[r]or(output[2][s][r]or(a5 or"0"))output[3][s][r]=(a7[3][s]or{})[r]or(output[3][s][r]or(a6 or"f"))end end;return output end}bT=a3.baseTerm;a3.buffer=a3.newBuffer(a3.width,a3.height," ",a3.textColor,a3.backColor)output.meta=a3;output.write=function(a5)assert(type(a5)=="string"or type(a5)=="number","expected string, got "..type(a5))local a8=a3.cursorX;for m=1,#tostring(a5)do if a3.cursorX>=1 and a3.cursorX<=a3.width and a3.cursorY>=1 and a3.cursorY<=a3.height then if not a3.buffer[1]then error("what the fuck happened")end;a3.buffer[1][a3.cursorY][a3.cursorX]=tostring(a5):sub(m,m)a3.buffer[2][a3.cursorY][a3.cursorX]=a3.textColor;a3.buffer[3][a3.cursorY][a3.cursorX]=a3.backColor end;a3.cursorX=a3.cursorX+1 end;if a3.alwaysRender then output.redraw(-1+a3.x+a8,-1+a3.x+a3.cursorX,-1+a3.y+a3.cursorY)end end;output.blit=function(a4,a5,a6)assert(type(a4)=="string"and type(a5)=="string"and type(a6)=="string","all arguments must be strings")assert(#a4==#a5 and#a5==#a6,"arguments must be same length")local a8=a3.cursorX;for m=1,#a4 do if a3.cursorX>=1 and a3.cursorX<=a3.width and a3.cursorY>=1 and a3.cursorY<=a3.height then a3.buffer[1][a3.cursorY][a3.cursorX]=a4:sub(m,m)a3.buffer[2][a3.cursorY][a3.cursorX]=f[a5:sub(m,m)]and y.default.textColor or a5:sub(m,m)a3.buffer[3][a3.cursorY][a3.cursorX]=f[a6:sub(m,m)]and y.default.backColor or a6:sub(m,m)a3.cursorX=a3.cursorX+1 end end;if a3.alwaysRender then output.redraw(-1+a3.x+a8,-1+a3.x+a3.cursorX,-1+a3.y+a3.cursorY)end end;output.setCursorPos=function(r,s)assert(type(r)=="number","argument #1 must be number, got "..type(r))assert(type(s)=="number","argument #2 must be number, got "..type(s))a3.cursorX,a3.cursorY=math.floor(r),math.floor(s)if a3.alwaysRender then if bT==output then bT=output.meta.baseTerm end;bT.setCursorPos(-1+a3.x+a3.cursorX,-1+a3.y+a3.cursorY)end end;output.getCursorPos=function()return a3.cursorX,a3.cursorY end;output.setTextColor=function(a9)if e[a9]then a3.textColor=e[a9]else error("Invalid color (got "..a9 ..")")end end;output.setTextColour=output.setTextColor;output.setBackgroundColor=function(a9)if e[a9]then a3.backColor=e[a9]else error("Invalid color (got "..a9 ..")")end end;output.setBackgroundColour=output.setBackgroundColor;output.getTextColor=function()return f[a3.textColor]end;output.getTextColour=output.getTextColor;output.getBackgroundColor=function()return f[a3.backColor]end;output.getBackgroundColour=output.getBackgroundColor;output.setVisible=function(aa)assert(type(aa)=="boolean","bad argument #1 (expected boolean, got "..type(aa)..")")a3.visible=aa and true or false end;output.clear=function()a3.buffer=a3.newBuffer(a3.width,a3.height," ",a3.textColor,a3.backColor)if a3.alwaysRender then output.redraw()end end;output.clearLine=function()a3.buffer[1][a3.cursorY]=nil;a3.buffer[2][a3.cursorY]=nil;a3.buffer[3][a3.cursorY]=nil;a3.buffer=a3.newBuffer(a3.width,a3.height," ",a3.textColor,a3.backColor,a3.buffer)if a3.alwaysRender then bT.setCursorPos(a3.x,-1+a3.y+a3.cursorY)bT.blit((" "):rep(a3.width),a3.textColor:rep(a3.width),a3.backColor:rep(a3.width))end end;output.getLine=function(s)assert(type(s)=="number","bad argument #1 (expected number, got "..type(s)..")")assert(a3.buffer[1][s],"Line is out of range.")return c(a3.buffer[1][s]),c(a3.buffer[2][s]),c(a3.buffer[3][s])end;output.scroll=function(ab)if math.abs(ab)<a3.height then local ac={{},{},{}}for r=1,a3.width do ac[1][r]=" "ac[2][r]=a3.textColor;ac[3][r]=a3.backColor end;for s=1,a3.height do a3.buffer[1][s]=a3.buffer[1][s+ab]or ac[1]a3.buffer[2][s]=a3.buffer[2][s+ab]or ac[2]a3.buffer[3][s]=a3.buffer[3][s+ab]or ac[3]end else a3.buffer=a3.newBuffer(a3.width,a3.height," ",a3.textColor,a3.backColor)end;if a3.alwaysRender then if d(ab)~=0 then output.redraw()end end end;output.getSize=function()return a3.width,a3.height end;output.isColor=function()return a3.isColor end;output.isColour=output.isColor;output.reposition=function(r,s,a0,a1)assert(type(r)=="number","bad argument #1 (expected number, got "..type(r)..")")assert(type(s)=="number","bad argument #2 (expected number, got "..type(s)..")")a3.x=d(r)a3.y=d(s)if a0 then assert(type(a0)=="number","bad argument #3 (expected number, got "..type(a0)..")")assert(type(a1)=="number","bad argument #4 (expected number, got "..type(a1)..")")a3.width=a0;a3.height=a1;a3.buffer=a3.newBuffer(a3.width,a3.height," ",a3.textColor,a3.backColor,a3.buffer)end;if a3.alwaysRender then output.redraw()end end;output.restoreCursor=function()bT.setCursorPos(math.max(0,-1+a3.x+a3.cursorX),math.max(0,-1+a3.y+a3.cursorY))bT.setCursorBlink(a3.blink)end;output.getPosition=function()return a3.x,a3.y end;output.setCursorBlink=function(ad)a3.blink=ad and true or false end;output.getCursorBlink=function(ad)return a3.blink end;output.setPaletteColor=bT.setPaletteColor;output.setPaletteColour=bT.setPaletteColour;output.getPaletteColor=bT.getPaletteColor;output.getPaletteColour=bT.getPaletteColour;if bT.getPaletteColor then output.nativePaletteColor=bT.nativePaletteColor or function(ae)if n[ae]then return table.unpack(n[ae])else return table.unpack(n[1])end end end;output.redraw=function(af,ag,s,z)z=z or{}z.onlyX1=af;z.onlyX2=ag;z.onlyY=s;if#a3.renderBuddies>0 then y.render(z,output,table.unpack(a3.renderBuddies))else y.render(z,output)end;output.restoreCursor()end;if a3.alwaysRender then output.redraw()end;return output end;return y